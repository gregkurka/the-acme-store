{
  "info": {
    "_postman_id": "e76c60dc-0d96-4ca2-98cf-9cd59eaded0e",
    "name": "Favorites API Tests",
    "description": "Collection to test all Favorites API endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000"
    },
    {
      "key": "userId",
      "value": ""
    },
    {
      "key": "productId",
      "value": ""
    },
    {
      "key": "favoriteId",
      "value": ""
    }
  ],
  "item": [
    {
      "name": "1) Create User",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"Juniper\",\n  \"password\": \"test-password\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Check status code",
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "// Parse response, save userId to environment",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"userId\", jsonData.id);",
              "console.log(\"Created userId = \" + jsonData.id);"
            ]
          }
        }
      ]
    },
    {
      "name": "2) Create Product",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Sandwich\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/products",
          "host": ["{{baseUrl}}"],
          "path": ["api", "products"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Check status code",
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "// Parse response, save productId to environment",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"productId\", jsonData.id);",
              "console.log(\"Created productId = \" + jsonData.id);"
            ]
          }
        }
      ]
    },
    {
      "name": "3) Get Users",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/users",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Body is array of users\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "    // optional deeper checks",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "4) Get Products",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/products",
          "host": ["{{baseUrl}}"],
          "path": ["api", "products"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Body is array of products\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "5) Create Favorite",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"product_id\": \"{{productId}}\"\n}"
        },
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}/favorites",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}", "favorites"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "// Check status code for create",
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "// Save favoriteId from response",
              "var jsonData = pm.response.json();",
              "pm.environment.set(\"favoriteId\", jsonData.id);",
              "console.log(\"Created favoriteId = \" + jsonData.id);"
            ]
          }
        }
      ]
    },
    {
      "name": "6) Get User Favorites",
      "request": {
        "method": "GET",
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}/favorites",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}", "favorites"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "",
              "pm.test(\"Body is array of favorites\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "7) Delete Favorite",
      "request": {
        "method": "DELETE",
        "header": [],
        "url": {
          "raw": "{{baseUrl}}/api/users/{{userId}}/favorites/{{favoriteId}}",
          "host": ["{{baseUrl}}"],
          "path": ["api", "users", "{{userId}}", "favorites", "{{favoriteId}}"]
        }
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 204\", function () {",
              "    pm.response.to.have.status(204);",
              "});",
              "",
              "// Clear out the favoriteId from environment if you wish",
              "pm.environment.unset(\"favoriteId\");"
            ]
          }
        }
      ]
    }
  ]
}
